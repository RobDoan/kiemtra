1. Khai bao bien voi chu viet Hoa dau tien
2. b, c, f
3. 

def simple
	puts 'Here comes the code block!'
	yield
	puts 'There was the code block!'
end
simple { puts 'Hooray! The code block is here!' }

4. 
[1,3,8,9,19,23,42,19].each do |f| 
  temp = []
  if (f % 2 != 0)
    puts f 
    temp << f
  else
    puts "khong phai so le"
  end 
end

5. 
- su dung Symbol thi se tiet kiem duoc o nho hon String
- Symbol thi immutable, con String laf mutable

6.
 $$this_is_global_variable
7.
 a||=b
 neu a chua co gia tri thi gan cho b. Con neu co gia tri roi thi la a
8.
 private, protected and public

###################################################################################
1. 
 Prefix Verb   URI Pattern                                Controller#Action
     book_reviews GET    /books/:book_id/reviews(.:format)          reviews#index
                  POST   /books/:book_id/reviews(.:format)          reviews#create
  new_book_review GET    /books/:book_id/reviews/new(.:format)      reviews#new
 edit_book_review GET    /books/:book_id/reviews/:id/edit(.:format) reviews#edit
      book_review GET    /books/:book_id/reviews/:id(.:format)      reviews#show
                  PATCH  /books/:book_id/reviews/:id(.:format)      reviews#update
                  PUT    /books/:book_id/reviews/:id(.:format)      reviews#update
                  DELETE /books/:book_id/reviews/:id(.:format)      reviews#destroy
        like_book POST   /books/:id/like(.:format)                  books#like
  most_view_books GET    /books/most_view(.:format)                 books#most_view

2. 
:after_initialize
:after_find
:after_touch
:before_validation
:after_validation
:before_save
:around_save
:after_save
:before_create
:around_create
:after_create
:before_update
:around_update
:after_update
:before_destroy
:around_destroy
:after_destroy
:after_commit
:after_rollback

3. 
after_action, append_after_action, append_around_action, append_before_action, around_action

before_action

prepend_after_action, prepend_around_action, prepend_before_action

skip_action_callback, skip_after_action, skip_around_action, skip_before_action, skip_filter

4. rails new BookManagement
5. rails g scaffold name, author, pushlished_on
6. validates :name, :presence => true
   validates :published_on, 
7. rails g model Review content, user_id
8. rails g model User name, email
9. class Book < ActiveRecord::Base
     has_many :reviews
   end      

   class Review < ActiveRecord::Base
     belongs_to :book
     has_many :users
   end

   class User < ActiveRecord::Base
     has_many :reviews
   end 
10. rails g migration add_like_counter_to_books
11. 
   def like_book

     if session[:user_id] = current_user
     else
        "..."
     end
   end

12.  